name: Manual deploy

on:
  workflow_dispatch:

jobs:
  jekyll:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    # Use GitHub Actions' cache to shorten build times and decrease load on servers
    - uses: actions/cache@v1
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-gems-

    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.6 # Not needed with a .ruby-version file
        bundler-cache: true # runs 'bundle install' and caches installed gems automatically


    # Standard usage
    - name: Deployment
      run: |
        bundle exec jekyll build --config _config.yml,_config_build.yml
        


    # Example deployment: Push to S3
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Create minified json for search
      run: |
        python3 -c 'import json, sys;json.dump(json.load(sys.stdin), sys.stdout)' < _site/search.json > _site/search-min

    - name: Sync output to S3
      run: |
        # aws s3 sync --delete --exclude '.sass-cache' _site s3://www.fullofwishes.co.uk
        # aws s3 mv --content-type "text/xml" --metadata-directive REPLACE s3://www.fullofwishes.co.uk/feed.xml s3://www.fullofwishes.co.uk/feed
        # aws cloudfront create-invalidation --no-cli-pager --distribution-id ${{ secrets.CDN_DISTRIBUTION_ID_WWW }} --paths "/*"
        # aws cloudfront create-invalidation --no-cli-pager --distribution-id ${{ secrets.CDN_DISTRIBUTION_ID_CDN }} --paths "/*"
